-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.authorities
(
    authority_id integer NOT NULL DEFAULT nextval('authorities_authority_id_seq'::regclass),
    username character varying(50) COLLATE pg_catalog."default",
    authority character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'ROLE_USER'::character varying,
    CONSTRAINT authorities_pk PRIMARY KEY (authority_id)
    );

CREATE TABLE IF NOT EXISTS public.locations
(
    location_id integer NOT NULL DEFAULT nextval('locations_location_id_seq'::regclass),
    latitude numeric(18, 16) NOT NULL,
    longitude numeric(18, 16) NOT NULL,
    location_date timestamp without time zone NOT NULL,
    CONSTRAINT locations_pkey PRIMARY KEY (location_id)
    );

CREATE TABLE IF NOT EXISTS public.persistent_logins
(
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    series character varying(64) COLLATE pg_catalog."default" NOT NULL,
    token character varying(64) COLLATE pg_catalog."default" NOT NULL,
    last_used timestamp without time zone NOT NULL,
    CONSTRAINT persistent_logins_pk PRIMARY KEY (series)
    );

CREATE TABLE IF NOT EXISTS public.user_locations
(
    user_id integer NOT NULL,
    location_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public.users
(
    user_id integer NOT NULL DEFAULT nextval('users_user_id_seq'::regclass),
    first_name character varying(30) COLLATE pg_catalog."default",
    last_name character varying(30) COLLATE pg_catalog."default",
    email character varying(80) COLLATE pg_catalog."default",
    phone_number character varying(20) COLLATE pg_catalog."default",
    password character varying(100) COLLATE pg_catalog."default",
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    enabled boolean NOT NULL DEFAULT false,
    CONSTRAINT users_pkey PRIMARY KEY (user_id)
    );

ALTER TABLE IF EXISTS public.authorities
    ADD CONSTRAINT authorities_users_username_fk FOREIGN KEY (username)
    REFERENCES public.users (username) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.persistent_logins
    ADD CONSTRAINT persistent_logins_users_username_fk FOREIGN KEY (username)
    REFERENCES public.users (username) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_locations
    ADD CONSTRAINT user_locations_location_id_fkey FOREIGN KEY (location_id)
    REFERENCES public.locations (location_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_locations
    ADD CONSTRAINT user_locations_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;

END;

INSERT INTO users(first_name,last_name,email,phone_number,password) VALUES('Tom','Robinson','tom.rob@yopmail.com','+15103754657','123456');
INSERT INTO locations(latitude,longitude,location_date) VALUES(43.63746472422702,3.8409670228559136,now());